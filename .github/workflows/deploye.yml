name: Deploy Node.js Express App to EC2 with Nginx

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Deploy to EC2 using SSH
      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      # Execute SSH commands to install dependencies and configure the app
      - name: Execute remote ssh commands using ssh key
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update and install required packages
            sudo apt-get update -y
            sudo apt-get install -y nodejs npm git nginx

            # Install PM2 for process management
            sudo npm install -g pm2

            # Navigate to your app directory
            cd ${{ secrets.TARGET_DIR }}

            # Install Node.js dependencies
            npm install

            # Start the Node.js app using PM2
            pm2 start app.js --name "express-api"

            # Save the PM2 process list
            pm2 save

            # Ensure PM2 starts on boot
            pm2 startup

            # Configure Nginx as a reverse proxy for the Node.js app
            sudo bash -c 'cat > /etc/nginx/sites-available/express-api <<EOF
            server {
                listen 80;
                server_name ${REMOTE_HOST};

                location / {
                    proxy_pass http://localhost:3000;  # Assuming your Express app runs on port 3000
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }
            }
            EOF'

            # Enable the Nginx configuration
            sudo ln -s /etc/nginx/sites-available/express-api /etc/nginx/sites-enabled/

            # Test Nginx configuration and restart the service
            sudo nginx -t
            sudo systemctl restart nginx

            # Optional: Ensure Nginx starts on boot
            sudo systemctl enable nginx
